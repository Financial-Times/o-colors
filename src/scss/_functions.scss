@function _oColorsGetPaletteColor($name) {
	@each $color in $o-colors-palette-list {
		@if nth($color,1) == $name {
			@return nth($color,2);
		}
	}
	@warn "Undefined color '" + $name + "' used";
	@return black;
}

@function _oColorsGetUseCase($name, $property) {
  @each $usecase in $o-colors-usecase-list {
    @if ( ($property != "" and $name == nth($usecase, 1) and $property == nth($usecase, 3))
        or ($property == "" and $name == nth($usecase, 1) + '-' + nth($usecase, 3)) ) {
      @if (length($usecase) == 4 and nth($usecase,4) == DEPRECATED) {
        @warn "Deprecated use-case name '" + $name + "', property '" + $property + "' used";
      }
      @return _oColorsGetPaletteColor(nth($usecase,2));
    }
  }
  @return undefined;
}

@function oColorsGetColorFor($namelist, $property: "") {
  $color: undefined;
  @each $name in $namelist {
    @if ($color == undefined) {
      $color: _oColorsGetUseCase($name, $property);
    }
    @if ($color == undefined and $property != "") {
      $color: _oColorsGetUseCase($name, all);
    }
  }
  @if ($color == undefined) {
    $error: "Undefined use-case: can\'t resolve '" + $namelist + "' to a colour";
    @if ($property) {
      $error: $error + " for property '" + $property;
    }
    @warn $error;
    $color: black;
  }
  @return $color;
}
